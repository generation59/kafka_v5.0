#!/bin/bash

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ª–æ–≥–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
echo "================================================================"
echo "        –ì–ï–ù–ï–†–ê–¶–ò–Ø –õ–û–ì–û–í –° –î–ê–ù–ù–´–ú–ò"
echo "================================================================"

echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:"
echo "1. NiFi Flow –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω (http://localhost:8080/nifi)"
echo "2. –í—Å–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç"
echo ""

read -p "‚úÖ NiFi Flow –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ NiFi:"
    echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080/nifi"
    echo "2. –õ–æ–≥–∏–Ω: admin, –ø–∞—Ä–æ–ª—å: ctsBtRBKHRAx69EqUghvvgEvjnaLjFEB"
    echo "3. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ template: templates/kafka_integration_flow.xml"
    echo "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Bootstrap Servers –≤ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞—Ö:"
    echo "   ConsumeKafka: kafka-broker-1:29092,kafka-broker-2:29093,kafka-broker-3:29094"
    echo "   PublishKafka: kafka-broker-1:29092,kafka-broker-2:29093,kafka-broker-3:29094"
    echo "5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã"
    echo "6. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–Ω–æ–≤–æ"
    exit 1
fi

echo "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∏ —Å–±–æ—Ä –ª–æ–≥–æ–≤..."

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è
cd python
if [ ! -d "venv" ]; then
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python3 -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
else
    source venv/bin/activate
fi
cd ..

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤
rm -f producer_logs.txt consumer_logs.txt nifi_logs.txt kafka_consumer_logs.txt

echo "üöÄ –®–∞–≥ 1: –ó–∞–ø—É—Å–∫ Consumer –≤ —Ñ–æ–Ω–µ..."
cd python
source venv/bin/activate
python3 test_consumer_confluent.py > ../consumer_logs.txt 2>&1 &
CONSUMER_PID=$!
cd ..

echo "Consumer PID: $CONSUMER_PID"
echo "‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ consumer..."
sleep 10

echo "üì§ –®–∞–≥ 2: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤–æ–π –ø–∞—Ä—Ç–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π..."
cd python
source venv/bin/activate
(echo "1"; echo "5"; echo "1") | python3 test_producer_confluent.py > ../producer_logs.txt 2>&1
cd ..

echo "‚è≥ –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ NiFi..."
sleep 15

echo "üì§ –®–∞–≥ 3: –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ç–æ—Ä–æ–π –ø–∞—Ä—Ç–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π..."
cd python
source venv/bin/activate
(echo "1"; echo "3"; echo "0.5") | python3 test_producer_confluent.py >> ../producer_logs.txt 2>&1
cd ..

echo "‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏..."
sleep 10

echo "üõë –®–∞–≥ 4: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Consumer..."
kill $CONSUMER_PID 2>/dev/null || true
sleep 2

echo "üìÑ –®–∞–≥ 5: –°–±–æ—Ä –ª–æ–≥–æ–≤ NiFi..."
docker compose logs nifi --tail=100 > nifi_logs.txt 2>&1

echo "üìÑ –®–∞–≥ 6: –°–±–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —Ç–æ–ø–∏–∫–æ–≤..."
{
    echo "=== Kafka Console Consumer Output ==="
    echo "Timestamp: $(date)"
    echo ""
    echo "--- Messages from user-events topic ---"
    timeout 10s docker compose exec -T kafka-broker-1 kafka-console-consumer --bootstrap-server localhost:9092 --topic user-events --from-beginning --max-messages 10 2>/dev/null || echo "No messages or timeout"
    echo ""
    echo "--- Messages from processed-events topic ---"
    timeout 10s docker compose exec -T kafka-broker-1 kafka-console-consumer --bootstrap-server localhost:9092 --topic processed-events --from-beginning --max-messages 10 2>/dev/null || echo "No messages or timeout"
} > kafka_consumer_logs.txt

echo "üìä –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
echo ""
echo "üìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤:"
echo "   üìÑ producer_logs.txt: $(wc -l < producer_logs.txt 2>/dev/null || echo 0) —Å—Ç—Ä–æ–∫"
echo "   üìÑ consumer_logs.txt: $(wc -l < consumer_logs.txt 2>/dev/null || echo 0) —Å—Ç—Ä–æ–∫"
echo "   üìÑ nifi_logs.txt: $(wc -l < nifi_logs.txt 2>/dev/null || echo 0) —Å—Ç—Ä–æ–∫"
echo "   üìÑ kafka_consumer_logs.txt: $(wc -l < kafka_consumer_logs.txt 2>/dev/null || echo 0) —Å—Ç—Ä–æ–∫"

echo ""
echo "üîç –ö—Ä–∞—Ç–∫–∏–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:"
echo "--- Producer (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫) ---"
tail -5 producer_logs.txt 2>/dev/null || echo "–§–∞–π–ª –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo ""
echo "--- Consumer (–ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫) ---"
head -5 consumer_logs.txt 2>/dev/null || echo "–§–∞–π–ª –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"

echo ""
echo "--- Kafka Consumer (user-events) ---"
grep -A 5 "user-events topic" kafka_consumer_logs.txt 2>/dev/null || echo "–°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

echo ""
echo "================================================================"
echo "        –ì–ï–ù–ï–†–ê–¶–ò–Ø –õ–û–ì–û–í –ó–ê–í–ï–†–®–ï–ù–ê"
echo "================================================================"
echo ""
echo "‚úÖ –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã:"
echo "   üìÑ producer_logs.txt"
echo "   üìÑ consumer_logs.txt"  
echo "   üìÑ nifi_logs.txt"
echo "   üìÑ kafka_consumer_logs.txt"
echo ""

if [ -s producer_logs.txt ] && [ -s consumer_logs.txt ]; then
    echo "üéâ –õ–æ–≥–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–∞–Ω–Ω—ã–µ - –≥–æ—Ç–æ–≤—ã –¥–ª—è –æ—Ç—á–µ—Ç–∞!"
else
    echo "‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ª–æ–≥–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
    echo "1. NiFi Flow –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    echo "2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ Bootstrap Servers –≤ NiFi –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞—Ö"
    echo "3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏"
    echo ""
    echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å NiFi –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–≤ –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ"
    echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ NiFi –Ω–∞ –æ—à–∏–±–∫–∏: docker compose logs nifi --tail=50"
    echo "3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ç–æ–ø–∏–∫–∏ —Å–æ–∑–¥–∞–Ω—ã: docker compose exec kafka-broker-1 kafka-topics --list --bootstrap-server localhost:9092"
fi 